<!--===========================================================================
  This is the build file for the libformula project.
  
  This build file will use the common_build.xml file as the default build
  process and should only override the tasks that need to differ from
  the common build file.
  
  See common_build.xml for more details
============================================================================-->
<project name="libformula" basedir="." default="jar">
	
	<description>
	  This build file is used to create the libformula project
		and works with the common_build.xml file.
	</description>


	<!-- Define the default location of the common build file -->
	<property name="common.build.file" value="./common_build.xml" 
		description="This is the location of the standardized common_build.xml file"/>

	<!-- Import the common_build.xml file which contains all the default tasks -->
	<import file="${common.build.file}"/>

        <property name="javacchome" value="/home/src/ext/javacc"/>
    <!--
      AS STATED ABOVE, THE ONLY TASKS THAT SHOULD EXIST IN THIS BUILD FILE ARE
      THE TASKS THAT NEED TO DIFFER FROM THE DEFAULT IMPLEMENTATION OF THE TASKS
      FOUND IN common_build.xml.
    --> 

  <target name="compile-jj"
          description="Compiles the libformula-Parser from the JavaCC specs. Requires JavaCC 3.2 to work.">
    <javacc
        target="source/org/pentaho/reporting/libraries/formula/parser/Parser.jj"
        outputdirectory="source/org/pentaho/reporting/libraries/formula/parser"
        javacchome="${javacchome}"
    />
  </target>

	<target name="dist" description="Creates all the distributable items for this project" >
		<ant antfile="${common.build.file}" target="dist" />
		
		<!-- Create the required zip distribution which contains the entire project -->
		<zip destfile="${dist.dir}/${ivy.artifact.id}-${project.revision}.zip">
			<fileset dir="${basedir}">
				<exclude name="bin/" />
				<exclude name="dist/" />
				<exclude name="eclipse-bin/" />
			</fileset>
			<zipfileset dir="${dist.dir}" includes="**/*.jar" />
		</zip>
	</target>

</project>
